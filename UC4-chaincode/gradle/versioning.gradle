/*
 * SPDX-License-Identifier: Apache-2.0
 */

ZoltuGitVersioning {
    customDescribeProcessor { describeResults ->
        def matcher = (describeResults =~ /v(?<major>[0-9]+?)\.(?<minor>[0-9]+?)\.(?<patch>[0-9]+?)(\.(?<hotfix>[0-9]+?))?(?:\-(?<tags>[0-9A-Za-z\.\-]+))?\-(?<commitCount>[0-9]+?)\-g(?<sha>[a-zA-Z0-9]+)/)
        matcher.matches()
        [
                major: matcher.group('major'),
                minor: matcher.group('minor'),
                commitCount: matcher.group('commitCount'),
                sha: matcher.group('sha'),
                patch: matcher.group('patch'),
                tags: matcher.group('tags') ]
    }
    customVersionToString { versionInfo ->
        if(versionInfo.commitCount.equals("0")){
            return "${versionInfo.major}.${versionInfo.minor}.${versionInfo.patch}"
        }
        else {
            return "${versionInfo.major}.${versionInfo.minor}.${versionInfo.patch}-${versionInfo.commitCount}"
        }
    }
}

// call once to invoke execution
ZoltuGitVersioning.versionInfo

// copy to project.properties
task 'addVersion' {
    File f = file('src/main/resources/project.properties')
    Properties props = new Properties()

    // read
    FileInputStream fis = new FileInputStream(f)
    props.load(fis)
    fis.close()

    // adjust
    props.setProperty("rootVersion", "${version}")

    FileOutputStream fos = new FileOutputStream(f)
    props.store(fos, "")
    fos.close()
}

// enforce version copy
compileJava.dependsOn("addVersion")

