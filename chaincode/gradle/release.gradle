/*
 * SPDX-License-Identifier: Apache-2.0
 */

/* repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
authentication(userName: ossrhUsername, password: ossrhPassword)
  }

snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
authentication(userName: ossrhUsername, password: ossrhPassword)
  }*/

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allJava
}

def isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    publications {
        myPublication(MavenPublication) {
            from components.java

            pom {
                // group = 'de.upb.cs.uc4' // set by general info
                // version = '0.0.0-Snapshot' // set by general info
                // name = 'hlf-chaincode' // set by general info
                description.set("The UC4 chaincode to set up our UniversityCredits4.0 network")
                url.set("https://uc4.cs.upb.de/")
                licenses {
                    license {
                        name.set("The Apache License, Version 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                    }
                }
                developers {
                    developer {
                        id.set("UC4")
                        name.set("UC4")
                        email.set("UC4_official@web.de")
                        url.set("https://github.com/upb-uc4")
                    }
                }
                scm {
                    connection.set("scm:git:https://github.com/upb-uc4/hlf-chaincode.git")
                    developerConnection.set("scm:git:git@github.com:upb-uc4/hlf-chaincode.git")
                    url.set("https://github.com/upb-uc4/hlf-chaincode")
                }
            }
        }
    }
    repositories {
        maven {
            def getRepositoryUrl = {
                def releaseRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                if (isReleaseVersion) {
                    return releaseRepoUrl
                } else {
                    return snapshotsRepoUrl
                }
            }
            name = "OSSRH"
            url = getRepositoryUrl()
            credentials {
                username = System.getenv("SONATYPE_USERNAME")
                password = System.getenv("SONATYPE_PW")
            }
        }
    }
}

// TODO: does not seem to affect build yet
tasks.withType(Sign) {
    onlyIf { gradle.taskGraph.hasTask("publish") }
}

signing {
    def PGP_KEY_ID = System.getenv("PGP_KEY_ID")
    System.out.println(PGP_KEY_ID)
    def PGP_SECRET = System.getenv("PGP_SECRET")
    System.out.println(PGP_SECRET)
    def PGP_PASSPHRASE = System.getenv("PGP_PASSPHRASE")
    System.out.println(PGP_PASSPHRASE)
    useInMemoryPgpKeys(PGP_KEY_ID, PGP_SECRET, PGP_PASSPHRASE)

    sign publishing.publications.myPublication
}