/*
 * UC4
 * This is the User API for UC4.
 *
 * OpenAPI spec version: 0.2.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.upb.cs.uc4.chaincode.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SubjectImmatriculationInterval
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-26T19:00:46.792+02:00")



public class SubjectMatriculation {
  /**
   * Gets or Sets fieldOfStudy
   */
  @JsonAdapter(FieldOfStudyEnum.Adapter.class)
  public enum FieldOfStudyEnum {
    COMPUTER_SCIENCE("Computer Science"),
    
    PHILOSOPHY("Philosophy"),
    
    MEDIA_SCIENCES("Media Sciences"),
    
    ECONOMICS("Economics"),
    
    MATHEMATICS("Mathematics"),
    
    PHYSICS("Physics"),
    
    CHEMISTRY("Chemistry"),
    
    EDUCATION("Education"),
    
    SPORTS_SCIENCE("Sports Science"),
    
    JAPANOLOGY("Japanology"),
    
    SPANISH_CULTURE("Spanish Culture"),
    
    PEDAGOGY("Pedagogy"),
    
    BUSINESS_INFORMATICS("Business Informatics"),
    
    LINGUISTICS("Linguistics"),
    
    VACATION("Vacation");

    private String value;

    FieldOfStudyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FieldOfStudyEnum fromValue(String text) {
      for (FieldOfStudyEnum b : FieldOfStudyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FieldOfStudyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FieldOfStudyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FieldOfStudyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FieldOfStudyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("fieldOfStudy")
  private FieldOfStudyEnum fieldOfStudy = null;

  @SerializedName("semesters")
  private List<String> semesters = null;

  public SubjectMatriculation fieldOfStudy(FieldOfStudyEnum fieldOfStudy) {
    this.fieldOfStudy = fieldOfStudy;
    return this;
  }

   /**
   * Get fieldOfStudy
   * @return fieldOfStudy
  **/
  @ApiModelProperty(value = "")
  public FieldOfStudyEnum getFieldOfStudy() {
    return fieldOfStudy;
  }

  public void setFieldOfStudy(FieldOfStudyEnum fieldOfStudy) {
    this.fieldOfStudy = fieldOfStudy;
  }

  public SubjectMatriculation semesters(List<String> semesters) {
    this.semesters = semesters;
    return this;
  }

  public SubjectMatriculation addsemestersItem(String semestersItem) {
    if (this.semesters == null) {
      this.semesters = new ArrayList<String>();
    }
    this.semesters.add(semestersItem);
    return this;
  }

   /**
   * Get semesters
   * @return semesters
  **/
  @ApiModelProperty(value = "")
  public List<String> getSemesters() {
    return semesters;
  }

  public void setSemesters(List<String> semesters) {
    this.semesters = semesters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubjectMatriculation subjectImmatriculationInterval = (SubjectMatriculation) o;
    return Objects.equals(this.fieldOfStudy, subjectImmatriculationInterval.fieldOfStudy) &&
        Objects.equals(this.semesters, subjectImmatriculationInterval.semesters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldOfStudy, semesters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubjectImmatriculationInterval {\n");
    
    sb.append("    fieldOfStudy: ").append(toIndentedString(fieldOfStudy)).append("\n");
    sb.append("    semesters: ").append(toIndentedString(semesters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

