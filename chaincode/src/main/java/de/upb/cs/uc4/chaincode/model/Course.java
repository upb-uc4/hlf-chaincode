/*
 * UC4
 * This is the Course API for UC4.
 *
 * OpenAPI spec version: 0.1.4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.upb.cs.uc4.chaincode.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * Course
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-27T14:59:21.562+02:00")



public class Course {
  @SerializedName("courseId")
  private String courseId = null;

  @SerializedName("courseName")
  private String courseName = null;

  /**
   * Gets or Sets courseType
   */
  @JsonAdapter(CourseTypeEnum.Adapter.class)
  public enum CourseTypeEnum {
    LECTURE("Lecture"),
    
    SEMINAR("Seminar"),
    
    PROJECT_GROUP("Project Group");

    private String value;

    CourseTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CourseTypeEnum fromValue(String text) {
      for (CourseTypeEnum b : CourseTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CourseTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CourseTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CourseTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CourseTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("courseType")
  private CourseTypeEnum courseType = null;

  @SerializedName("startDate")
  private LocalDate startDate = null;

  @SerializedName("endDate")
  private LocalDate endDate = null;

  @SerializedName("ects")
  private Integer ects = null;

  @SerializedName("lecturerId")
  private String lecturerId = null;

  @SerializedName("maxParticipants")
  private Integer maxParticipants = null;

  @SerializedName("currentParticipants")
  private Integer currentParticipants = null;

  /**
   * Gets or Sets courseLanguage
   */
  @JsonAdapter(CourseLanguageEnum.Adapter.class)
  public enum CourseLanguageEnum {
    GERMAN("German"),
    
    ENGLISH("English");

    private String value;

    CourseLanguageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CourseLanguageEnum fromValue(String text) {
      for (CourseLanguageEnum b : CourseLanguageEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CourseLanguageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CourseLanguageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CourseLanguageEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CourseLanguageEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("courseLanguage")
  private CourseLanguageEnum courseLanguage = null;

  @SerializedName("courseDescription")
  private String courseDescription = null;

  public Course courseId(String courseId) {
    this.courseId = courseId;
    return this;
  }

   /**
   * Get courseId
   * @return courseId
  **/
  @ApiModelProperty(value = "")
  public String getCourseId() {
    return courseId;
  }

  public void setCourseId(String courseId) {
    this.courseId = courseId;
  }

  public Course courseName(String courseName) {
    this.courseName = courseName;
    return this;
  }

   /**
   * Get courseName
   * @return courseName
  **/
  @ApiModelProperty(value = "")
  public String getCourseName() {
    return courseName;
  }

  public void setCourseName(String courseName) {
    this.courseName = courseName;
  }

  public Course courseType(CourseTypeEnum courseType) {
    this.courseType = courseType;
    return this;
  }

   /**
   * Get courseType
   * @return courseType
  **/
  @ApiModelProperty(value = "")
  public CourseTypeEnum getCourseType() {
    return courseType;
  }

  public void setCourseType(CourseTypeEnum courseType) {
    this.courseType = courseType;
  }

  public Course startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public Course endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

  public Course ects(Integer ects) {
    this.ects = ects;
    return this;
  }

   /**
   * Get ects
   * @return ects
  **/
  @ApiModelProperty(value = "")
  public Integer getEcts() {
    return ects;
  }

  public void setEcts(Integer ects) {
    this.ects = ects;
  }

  public Course lecturerId(String lecturerId) {
    this.lecturerId = lecturerId;
    return this;
  }

   /**
   * Get lecturerId
   * @return lecturerId
  **/
  @ApiModelProperty(value = "")
  public String getLecturerId() {
    return lecturerId;
  }

  public void setLecturerId(String lecturerId) {
    this.lecturerId = lecturerId;
  }

  public Course maxParticipants(Integer maxParticipants) {
    this.maxParticipants = maxParticipants;
    return this;
  }

   /**
   * Get maxParticipants
   * @return maxParticipants
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxParticipants() {
    return maxParticipants;
  }

  public void setMaxParticipants(Integer maxParticipants) {
    this.maxParticipants = maxParticipants;
  }

  public Course currentParticipants(Integer currentParticipants) {
    this.currentParticipants = currentParticipants;
    return this;
  }

   /**
   * Get currentParticipants
   * @return currentParticipants
  **/
  @ApiModelProperty(value = "")
  public Integer getCurrentParticipants() {
    return currentParticipants;
  }

  public void setCurrentParticipants(Integer currentParticipants) {
    this.currentParticipants = currentParticipants;
  }

  public Course courseLanguage(CourseLanguageEnum courseLanguage) {
    this.courseLanguage = courseLanguage;
    return this;
  }

   /**
   * Get courseLanguage
   * @return courseLanguage
  **/
  @ApiModelProperty(value = "")
  public CourseLanguageEnum getCourseLanguage() {
    return courseLanguage;
  }

  public void setCourseLanguage(CourseLanguageEnum courseLanguage) {
    this.courseLanguage = courseLanguage;
  }

  public Course courseDescription(String courseDescription) {
    this.courseDescription = courseDescription;
    return this;
  }

   /**
   * Get courseDescription
   * @return courseDescription
  **/
  @ApiModelProperty(value = "")
  public String getCourseDescription() {
    return courseDescription;
  }

  public void setCourseDescription(String courseDescription) {
    this.courseDescription = courseDescription;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Course course = (Course) o;
    return Objects.equals(this.courseId, course.courseId) &&
        Objects.equals(this.courseName, course.courseName) &&
        Objects.equals(this.courseType, course.courseType) &&
        Objects.equals(this.startDate, course.startDate) &&
        Objects.equals(this.endDate, course.endDate) &&
        Objects.equals(this.ects, course.ects) &&
        Objects.equals(this.lecturerId, course.lecturerId) &&
        Objects.equals(this.maxParticipants, course.maxParticipants) &&
        Objects.equals(this.currentParticipants, course.currentParticipants) &&
        Objects.equals(this.courseLanguage, course.courseLanguage) &&
        Objects.equals(this.courseDescription, course.courseDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(courseId, courseName, courseType, startDate, endDate, ects, lecturerId, maxParticipants, currentParticipants, courseLanguage, courseDescription);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Course {\n");
    
    sb.append("    courseId: ").append(toIndentedString(courseId)).append("\n");
    sb.append("    courseName: ").append(toIndentedString(courseName)).append("\n");
    sb.append("    courseType: ").append(toIndentedString(courseType)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    ects: ").append(toIndentedString(ects)).append("\n");
    sb.append("    lecturerId: ").append(toIndentedString(lecturerId)).append("\n");
    sb.append("    maxParticipants: ").append(toIndentedString(maxParticipants)).append("\n");
    sb.append("    currentParticipants: ").append(toIndentedString(currentParticipants)).append("\n");
    sb.append("    courseLanguage: ").append(toIndentedString(courseLanguage)).append("\n");
    sb.append("    courseDescription: ").append(toIndentedString(courseDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

