/*
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'java'
    id 'java-library-distribution'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'jacoco'
    id 'me.qoomon.git-versioning' version '2.1.1'
    id 'maven-publish'
    // id 'maven'
    id 'signing'
}

dependencies {
    implementation 'org.hyperledger.fabric-chaincode-java:fabric-chaincode-shim:2.2.0'
    implementation 'com.owlike:genson:1.5'
    implementation 'com.google.code.gson:gson:2.8.6'
    api group: 'org.threeten', name: 'threetenbp', version: '1.4.4'
    api group: 'io.swagger', name: 'swagger-annotations', version: '1.5.0'
    api group: 'org.jsoup', name: 'jsoup', version: '1.13.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.mockito:mockito-core:2.+'
}

repositories {
    mavenCentral()
    maven {
        url 'https://hyperledger.jfrog.io/hyperledger/fabric-maven'
    }
    jcenter()
    maven {
        url 'https://jitpack.io'
    }
}

// variables
def isReleaseVersion = !version.endsWith("SNAPSHOT")
def javaMainClass = 'org.hyperledger.fabric.contract.ContractRouter'
group = 'de.upb.cs.uc4'

// versioning
version = "0.0.0-SNAPSHOT"
gitVersioning.apply {
  branch {
    pattern = '(?<branch>.+)'
    versionFormat = '${branch}-${commit.timestamp.datetime}-SNAPSHOT'
  }
  tag {
    pattern = 'v(?<tagVersion>([0-9].[0-9].[0-9]))'
    versionFormat = '${tagVersion}'
  }
}

application {
    mainClassName = javaMainClass
}

shadowJar {
    archiveVersion = rootProject.version
    manifest {
        attributes 'Main-Class': javaMainClass
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// testcoverage
apply plugin: "jacoco"
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.70
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification

// release config
apply from: "$rootDir/release.gradle"
